#!/bin/ash
# Script pour configurer un point d'acc√®s Wi-Fi, installer Python 3, Node.js, et un broker MQTT sur Alpine Linux
# Am√©lior√© avec logs color√©s, ic√¥nes et progression

# Arr√™ter le script en cas d'erreur, variable non d√©finie, etc.
set -euo pipefail

# D√©finition des couleurs et ic√¥nes (pour un terminal UTF-8)
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
NC="\033[0m"  # Pas de couleur
ICON_INFO="üí°"
ICON_OK="‚úÖ"
ICON_ERROR="‚ùå"
ICON_WARN="‚ö†Ô∏è"
ICON_WIFI="üì∂"
ICON_INSTALL="üì¶"
ICON_CONF="üîß"
ICON_START="üöÄ"

# Nombre total d'√©tapes (√† mettre √† jour si le script √©volue)
TOTAL_STEPS=18
step=1

# Fonctions de log
log_info()   { echo -e "${ICON_INFO} ${BLUE}[INFO]${NC} $1"; }
log_success(){ echo -e "${ICON_OK} ${GREEN}[SUCCESS]${NC} $1"; }
log_error()  { echo -e "${ICON_ERROR} ${RED}[ERROR]${NC} $1"; }
log_warn()   { echo -e "${ICON_WARN} ${YELLOW}[WARN]${NC} $1"; }
progress()   { echo -e "[${step}/${TOTAL_STEPS}] $1"; step=$((step + 1)); }

# Fichier de configuration contenant les variables sensibles
CONFIG_FILE="setup-init.conf"
if [ ! -f "$CONFIG_FILE" ]; then
    log_error "Le fichier de configuration '$CONFIG_FILE' est introuvable."
    exit 1
fi
progress "Chargement de la configuration depuis '$CONFIG_FILE'..."
# Attention : Assure-toi que setup-init.conf est fiable avant de le sourcer
. "$CONFIG_FILE"

# Mise √† jour des paquets
progress "${ICON_INSTALL} Mise √† jour des paquets..."
apk update && log_success "Paquets mis √† jour." || log_error "Erreur lors de la mise √† jour des paquets."

# Installation des paquets n√©cessaires pour le point d'acc√®s Wi-Fi et autres utilitaires
progress "${ICON_INSTALL} Installation des paquets n√©cessaires (Wi-Fi, serial, etc.)..."
apk add hostapd dnsmasq mosquitto picocom logrotate cronie || {
    log_error "Erreur lors de l'installation des paquets requis."
    exit 1
}
log_success "Paquets install√©s."

# R√©cup√©ration d'une partie de l'adresse MAC pour cr√©er le SSID
progress "${ICON_WIFI} G√©n√©ration du SSID √† partir de l'adresse MAC..."
if [ -f /sys/class/net/wlan0/address ]; then
    MAC_ADDRESS=$(cat /sys/class/net/wlan0/address)
    SSID_SUFFIX=${MAC_ADDRESS: -5}  # Les 5 derniers caract√®res de l'adresse MAC
    SSID="${SSID_PREFIX}-${SSID_SUFFIX}"
    log_success "SSID g√©n√©r√© : ${SSID}"
else
    log_error "L'interface wlan0 n'est pas disponible ou ne fournit pas d'adresse MAC."
    exit 1
fi

# Configuration de l'interface r√©seau
progress "${ICON_CONF} Configuration de l'interface r√©seau..."
if [ -f configs/interfaces ]; then
    cat configs/interfaces > /etc/network/interfaces
    log_success "Interface r√©seau configur√©e."
else
    log_warn "Le fichier 'configs/interfaces' est introuvable. √âtape ignor√©e."
fi

# Configuration de hostapd
progress "${ICON_CONF} Configuration de hostapd..."
if [ -f configs/hostapd.conf ]; then
    sed "s/^ssid=.*/ssid=$SSID/" configs/hostapd.conf | sed "s/^wpa_passphrase=.*/wpa_passphrase=$WIFI_PASSWORD/" > /etc/hostapd/hostapd.conf
    log_success "hostapd configur√©."
else
    log_warn "Le fichier 'configs/hostapd.conf' est introuvable. √âtape ignor√©e."
fi

# Configuration de dnsmasq
progress "${ICON_CONF} Configuration de dnsmasq..."
if [ -f configs/dnsmasq.conf ]; then
    cat configs/dnsmasq.conf > /etc/dnsmasq.conf
    log_success "dnsmasq configur√©."
else
    log_warn "Le fichier 'configs/dnsmasq.conf' est introuvable. √âtape ignor√©e."
fi

# Activation des services hostapd et dnsmasq
progress "${ICON_START} Activation et d√©marrage de hostapd et dnsmasq..."
rc-update add hostapd && rc-update add dnsmasq
rc-service hostapd restart && rc-service dnsmasq restart
log_success "Services hostapd et dnsmasq d√©marr√©s."

# Installation de Python 3, Node.js et pip
progress "${ICON_INSTALL} Installation de Python 3, Node.js et py3-pip..."
apk add python3 nodejs py3-pip || {
    log_error "Erreur lors de l'installation de Python 3 ou Node.js."
    exit 1
}
log_success "Python 3, Node.js et pip install√©s."

# Cr√©ation d'un environnement virtuel et installation des composants pip
progress "${ICON_INSTALL} Cr√©ation de l'environnement virtuel Python et installation des paquets pip..."
python3 -m venv /root/venv
. /root/venv/bin/activate
pip install --no-cache-dir esptool adafruit-ampy paho-mqtt && log_success "Paquets Python install√©s." || {
    log_error "Erreur lors de l'installation des paquets Python."
    exit 1
}

# Sauvegarde et configuration de Mosquitto
progress "${ICON_CONF} Sauvegarde et configuration de Mosquitto..."
if [ -f /etc/mosquitto/mosquitto.conf ]; then
    cp /etc/mosquitto/mosquitto.conf /etc/mosquitto/mosquitto.conf.bak
    log_info "Sauvegarde du fichier de configuration Mosquitto effectu√©e."
    mkdir /var/lib/mosquitto/
    log_info "Cr√©ation du r√©pertoire /var/lib/mosquitto."
fi
if [ -f configs/mosquitto.conf ]; then
    cat configs/mosquitto.conf > /etc/mosquitto/mosquitto.conf
    log_success "Mosquitto configur√©."
else
    log_warn "Le fichier 'configs/mosquitto.conf' est introuvable. √âtape ignor√©e."
fi

# Cr√©ation d'un utilisateur MQTT
progress "${ICON_CONF} Cr√©ation d'un utilisateur MQTT..."
mosquitto_passwd -c -b /etc/mosquitto/pwfile "$MQTT_USER" "$MQTT_PASSWORD" && log_success "Utilisateur MQTT cr√©√©." || {
    log_error "Erreur lors de la cr√©ation de l'utilisateur MQTT."
    exit 1
}

# Cr√©ation d'un fichier ACL de base
progress "${ICON_CONF} Cr√©ation d'un fichier ACL pour Mosquitto..."
if [ -f configs/acl.conf ]; then
    cat configs/acl.conf > /etc/mosquitto/acl.conf
    log_success "Fichier ACL configur√©."
else
    log_warn "Le fichier 'configs/acl.conf' est introuvable. √âtape ignor√©e."
fi

# D√©finir les permissions pour les fichiers de configuration Mosquitto
progress "${ICON_CONF} D√©finition des permissions pour Mosquitto..."
chown mosquitto:mosquitto /etc/mosquitto/pwfile
chmod 644 /etc/mosquitto/pwfile
chown mosquitto:mosquitto -R /etc/mosquitto/
chmod 755 /etc/mosquitto/
chown mosquitto:mosquitto /etc/mosquitto/acl.conf
chmod 644 /etc/mosquitto/acl.conf
mkdir -p /var/lib/mosquitto/
chown -R mosquitto:mosquitto /var/lib/mosquitto/
chmod -R 770 /var/lib/mosquitto/
mkdir -p /var/log/mosquitto/
chown -R mosquitto:mosquitto /var/log/mosquitto/
chmod -R 770 /var/log/mosquitto/
log_success "Permissions d√©finies pour Mosquitto."

# Rendre les scripts additionnels ex√©cutables
progress "${ICON_INSTALL} Mise en ex√©cution des scripts additionnels..."
if [ -d ../modules ]; then
    chmod +x ../modules/flash.sh ../modules/transfer.sh
    log_success "Scripts additionnels rendus ex√©cutables."
else
    log_warn "Le dossier 'modules' n'existe pas. √âtape ignor√©e."
fi

# Installation et activation du script init.d personnalis√©
progress "${ICON_CONF} Installation et activation du script init.d 'mqttFlight-modulesrc'..."
if [ -f configs/init.d/mqttFlight-modulesrc ]; then
    cat configs/init.d/mqttFlight-modulesrc > /etc/init.d/mqttFlight-modulesrc
    chmod +x /etc/init.d/mqttFlight-modulesrc
    rc-update add mqttFlight-modulesrc
    rc-service mqttFlight-modulesrc restart
    log_success "Script init.d 'mqttFlight-modulesrc' install√© et d√©marr√©."
else
    log_warn "Le fichier 'configs/init.d/mqttFlight-modulesrc' est introuvable. √âtape ignor√©e."
fi

# Configuration de logrotate et des t√¢ches cron
progress "${ICON_CONF} Configuration de logrotate et des t√¢ches cron..."
if [ -f configs/logrotate/mosquitto ]; then
    cat configs/logrotate/mosquitto > /etc/logrotate.d/mosquitto
    log_success "logrotate pour Mosquitto configur√©."
else
    log_warn "Le fichier 'configs/logrotate/mosquitto' est introuvable."
fi
if [ -f configs/crontabs/root ]; then
    cat configs/crontabs/root > /etc/crontabs/root
    log_success "Cron configur√©."
else
    log_warn "Le fichier 'configs/crontabs/root' est introuvable."
fi
rc-update add crond
rc-service crond start

# Activation et red√©marrage de Mosquitto
progress "${ICON_START} Activation et red√©marrage de Mosquitto..."
rc-update add mosquitto
rc-service mosquitto restart
log_success "Mosquitto activ√© et red√©marr√©."

# Affichage du r√©sum√© final
echo -e "\n${ICON_OK} ${GREEN}R√©sum√© des configurations appliqu√©es :${NC}"
echo "1. Point d'acc√®s Wi-Fi configur√© avec SSID : ${SSID} et mot de passe : ${WIFI_PASSWORD}"
echo "2. Python 3 et Node.js install√©s, environnement Python configur√©"
echo "3. Mosquitto MQTT Broker sauvegard√©, configur√© et red√©marr√©"
echo "4. Services hostapd et dnsmasq d√©marr√©s et ajout√©s au d√©marrage"
echo "5. Utilisateur MQTT '${MQTT_USER}' cr√©√© et fichier ACL en place"
echo "6. Script init.d 'mqttFlight-modulesrc' install√© et d√©marr√©"
echo "7. logrotate et cron configur√©s"

log_success "Configuration termin√©e avec succ√®s."
